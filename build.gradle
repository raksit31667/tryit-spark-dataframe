plugins {
    id "java"
    id "com.github.johnrengelman.shadow" version "5.2.0"
}

group "raksit.example.spark"
version "1.0-SNAPSHOT"

apply plugin: "java"
apply plugin: "scala"
apply plugin: "idea"

sourceCompatibility = 1.8
targetCompatibility = 1.8

configurations {
    provided
}

sourceSets {
    main {
        compileClasspath += configurations.provided
    }
}

repositories {
    jcenter()
    mavenLocal()
    mavenCentral()
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots"
    }
}

dependencies {
    implementation "org.scala-lang:scala-library:${scalaVersion}"
    implementation "org.scala-lang:scala-reflect:${scalaVersion}"
    implementation "org.scala-lang:scala-compiler:${scalaVersion}"

    implementation "org.apache.spark:spark-mllib_2.11:${sparkVersion}"
    implementation "org.apache.spark:spark-sql_2.11:${sparkVersion}"
    implementation "org.apache.spark:spark-streaming-flume-assembly_2.11:${sparkVersion}"
    implementation "org.apache.spark:spark-graphx_2.11:${sparkVersion}"
    implementation "org.apache.spark:spark-launcher_2.11:${sparkVersion}"
    implementation "org.apache.spark:spark-catalyst_2.11:${sparkVersion}"
    implementation "org.apache.spark:spark-streaming_2.11:${sparkVersion}"
    implementation "org.apache.spark:spark-core_2.11:${sparkVersion}"

    implementation group: "commons-io", name: "commons-io", version: "2.5"
    testImplementation group: "com.holdenkarau", name: "spark-testing-base_2.11", version: "${sparkVersion}_0.14.0"
    testImplementation group: "com.h2database", name: "h2", version: "1.3.148"
}

task run(type: JavaExec, dependsOn: classes) {
    main = mainClassFile
    classpath sourceSets.main.runtimeClasspath
    classpath configurations.runtime
}

jar {
    archiveClassifier.set("all")
    manifest {
        attributes "Implementation-Title": title,
                "Implementation-Version": getArchiveVersion(),
                "Main-Class": mainClassFile
    }
    include{sourceSets.main.output.classesDir}
    zip64 true
}

shadowJar {
    archiveClassifier.set("shadow")
    append "reference.conf"
    dependencies {

    }
}

idea {
    module {
        // IntelliJ does not know about the standard idiom of provided as used in managing
        // uber/shaded jar dependencies. Make it so!
        scopes.PROVIDED.plus += [ configurations.provided ]
    }
}
